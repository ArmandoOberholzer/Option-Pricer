import { Component, OnInit } from '@angular/core';
import { PriceService } from '../price.service';
import { PriceInputs, Greeks, History, ToetsHist,GoalSeek} from '../price';
import { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';



@Component({
  selector: 'app-option-details',
  templateUrl: './option-details.component.html',
  styleUrls: ['./option-details.component.css']
})
export class OptionDetailsComponent implements OnInit {

  PI : PriceInputs;
  Greek: Greeks;
  Hist: History[];
  Toets: ToetsHist[] = [];
  clientName : string;
  GoalSeek : GoalSeek;

 
  // items: FormArray;

    
  profileForm = this.fb.group({
    type: [null],
    strike: [null],
    spot: [null],
    rate: [null],
    time: [null],
    vol: [null],
    divYield: [null],
    price: [null]
    // trade: this.fb.array([this.addTradeGroup()])
    
  });
  constructor(private PriceService: PriceService, private fb: FormBuilder) {

    this.PI = new PriceInputs();
    this.GoalSeek = new GoalSeek();
   
  }

  ngOnInit() {
   
    // this.profileForm = this.fb.group({
    //   trade: this.fb.array([this.addTradeGroup()])
    // });
  }

  // addTradeGroup() {
  //   return this.fb.group({
  //     type: [null],
  //     strike: [null],
  //     spot: [null],
  //     rate: [null],
  //     time: [null],
  //     vol: [null],
  //     divYield: [null],
  //     price: [null]
  //   });
  // }
  // addTrade() {
  //   this.TradesArray.push(this.addTradeGroup());
  // }
  // removeTrade(index) {
  //   this.TradesArray.removeAt(index);
  // }

  // get TradesArray() {
  //   return <FormArray>this.profileForm.get('trade');
  // }

  onSubmit() {
    
    console.warn(this.profileForm.value);
  }

  getPrice(): void {
    this.PriceService.getPrice(this.PI)
    .subscribe(PI => this.PI = PI);
  }

  getSolution(): void {
    this.PriceService.getSolution(this.profileForm.value)
    .subscribe(PI => this.PI = PI)
  } 

  getSolution2(): void {
    this.PriceService.getSolution2(this.profileForm.value)
    .subscribe(GoalSeek => this.GoalSeek = GoalSeek);
  } 

  getGreeks(): void{
    this.PriceService.getGreeks(this.PI)
    .subscribe(Greek =>this.Greek = Greek)
  }

  getHistory(): void{
    this.PriceService.getHistory()
    .subscribe(Toets =>this.Toets = Toets)
  }

  // add(name: string, action: string ): void {
  //   name = name.trim();
  //   if (!name) { return; }
  //   let toets = { name , action } as ToetsHist
  //   this.PriceService.AddToets(toets)
  //     .subscribe(() => {
  //       this.Toets.push(toets);
  //     });
  // }

  // Update(): void {
  //   this.PriceService.updateTrade(this.Toets);
  // }
  
}
